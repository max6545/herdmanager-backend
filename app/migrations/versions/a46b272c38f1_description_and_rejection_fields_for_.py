"""description and rejection fields for animal and tag model

Revision ID: a46b272c38f1
Revises: abc43ff98623
Create Date: 2023-10-14 20:03:17.817752

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'a46b272c38f1'
down_revision = 'abc43ff98623'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('animal_tags',
                    sa.Column('animal_id', sa.String(length=255), nullable=True),
                    sa.Column('tag_id', sa.String(length=255), nullable=True),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('watermelon_id', sa.String(length=255), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('last_changed_at', sa.DateTime(), nullable=True),
                    sa.Column('farm_id', sa.Integer(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('animal_tags_changelog',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('watermelon_id', sa.String(length=255), nullable=True),
                    sa.Column('farm_id', sa.Integer(), nullable=True),
                    sa.Column('action_at', sa.DateTime(), nullable=True),
                    sa.Column('operation', sa.Enum('CREATE', 'UPDATE', 'DELETE', name='changeoperationtype'),
                              nullable=False),
                    sa.Column('old_value', sa.Text(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('tag',
                    sa.Column('name', sa.String(length=255), nullable=True),
                    sa.Column('description', sa.String(length=255), nullable=True),
                    sa.Column('icon', sa.String(length=255), nullable=True),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('watermelon_id', sa.String(length=255), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('last_changed_at', sa.DateTime(), nullable=True),
                    sa.Column('farm_id', sa.Integer(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('tag_changelog',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('watermelon_id', sa.String(length=255), nullable=True),
                    sa.Column('farm_id', sa.Integer(), nullable=True),
                    sa.Column('action_at', sa.DateTime(), nullable=True),
                    sa.Column('operation', sa.Enum('CREATE', 'UPDATE', 'DELETE', name='changeoperationtype'),
                              nullable=False),
                    sa.Column('old_value', sa.Text(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('animal', schema=None) as batch_op:
        batch_op.add_column(sa.Column('rejected_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('rejected_reason', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('rejected_info', sa.Text(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('animal', schema=None) as batch_op:
        batch_op.drop_column('rejected_info')
        batch_op.drop_column('rejected_reason')
        batch_op.drop_column('rejected_at')

    op.drop_table('tag_changelog')
    op.drop_table('tag')
    op.drop_table('animal_tags_changelog')
    op.drop_table('animal_tags')
    # ### end Alembic commands ###
